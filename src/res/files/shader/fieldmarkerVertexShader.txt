#version 130
uniform float hexWidth;
uniform float hexHeight2;
uniform float hexHeight;
uniform vec2 location;
uniform mat4 projectionMatrix;
uniform mat4 cameraMatrix;

uniform float time;

uniform int texTW;
uniform int texTH;
uniform int texX;
uniform int texY;
uniform int texW;
uniform int texH;

uniform vec2 vertexPos[6] = vec2[6] (vec2(0.5, 1.0), vec2(0.0, 0.75), vec2(1.0, 0.75), vec2(0.0, 0.25), vec2(1.0, 0.25), vec2(0.5, 0.0));
uniform vec2 vertexTex[6] = vec2[6] (vec2(0.5, 1.0), vec2(0.0, 0.75), vec2(1.0, 0.75), vec2(0.0, 0.25), vec2(1.0, 0.25), vec2(0.5, 0.0));
out vec2 fragTex;

void main() {
    int id = int(mod(gl_VertexID,6));
    fragTex = vertexTex[id];
    fragTex.x = (texX+fragTex.x*texW)/texTW;
    fragTex.y = 1-(texY+(1-fragTex.y)*texH)/texTH;

    vec4 pos = vec4((vertexPos[id].x+location.x-location.y/2)*hexWidth, (vertexPos[id].y)*hexHeight2-(location.y)*hexHeight2*hexHeight, 0, 1);

    gl_Position = projectionMatrix * cameraMatrix * pos;
}